// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x", "linux-musl-openssl-3.0.x", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Aircraft {
  id                               String             @id @default(cuid())
  tail_number                      String             @unique
  image_url                        String?            
  serial_number                    String?
  model                            String?
  manufacturer                     String?
  year_of_manufacture              Int?
  category                         String?
  registration_country             String?
  customer_id                      String?
  base_of_operation_id             String?
  owner                            String?
  operator                         String?
  home_base_airport                String?
  status                           AircraftStatusEnum @default(AIRWORTHY)
  status_reason                    String?            
  last_flight_date                 DateTime?
  next_inspection_due              DateTime?
  last_major_inspection            DateTime?
  maintenance_program              String?
  max_takeoff_weight               Float?
  max_fuel_capacity                Float?
  engine_model                     String?
  engine_manufacturer              String?
  number_of_engines                Int                @default(1)
  avionics_package                 String?
  pressurization                   Boolean            @default(false)
  is_ifr_certified                 Boolean            @default(false)
  airworthiness_certificate_expiry DateTime?
  registration_expiry              DateTime?
  insurance_policy_number          String?
  insurance_expiry                 DateTime?
  is_accelerated                   Boolean            @default(false)
  leasing_status                   LeasingEnum        @default(OWNED)
  leasing_company                  String?
  lease_expiry                     DateTime?
  notes                            String?
  created_at                       DateTime           @default(now())
  updated_at                       DateTime           @updatedAt
  deleted                          Boolean            @default(false)
  airframe_physical_inventory_id   String?            @unique  

  airframe_physical_inventory_item PhysicalInventoryItem? @relation("AirframePhysicalInventoryItem", fields: [airframe_physical_inventory_id], references: [id])
  base_of_operation        BaseOfOperation?  @relation(fields: [base_of_operation_id], references: [id])
  compliance_requirements  ComplianceRequirement[]
  customer                 Customer?                @relation(fields: [customer_id], references: [id])
  customer_to_aircraft_map CustomerToAircraftMap[]
  installed_physical_inventory_items PhysicalInventoryItem[] @relation("InstalledPhysicalInventoryItems")
  logbook_entries          LogbookEntry[]
  maintenance_due_projections MaintenanceDueProjection[]
  maintenance_requests     MaintenanceRequest[]
  mel_cdl_deferrals        MelCdlDeferral[]
  purchase_orders          PurchaseOrder[]
  scheduled_maintenance    ScheduledMaintenance[]
  unscheduled_maintenances UnscheduledMaintenance[]
  work_orders              WorkOrder[]
  work_performed           WorkPerformed[]

  @@map("aircraft")
}

model AircraftEngineManufacturer {
  id         String   @id @default(cuid())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted    Boolean  @default(false)

  AircraftEngineModel AircraftEngineModel[]

  @@map("aircraft_engine_manufacturers")
}

model AircraftEngineModel {
  id              String   @id @default(cuid())
  manufacturer_id String
  name            String
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  deleted         Boolean  @default(false)

  manufacturer AircraftEngineManufacturer @relation(fields: [manufacturer_id], references: [id])

  @@unique([manufacturer_id, name])
  @@map("aircraft_engine_models")
}

model AircraftManufacturer {
  id         String   @id @default(cuid())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted    Boolean  @default(false)

  AircraftModel AircraftModel[]

  @@map("aircraft_manufacturers")
}

model AircraftModel {
  id              String   @id @default(cuid())
  manufacturer_id String
  name            String
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  deleted         Boolean  @default(false)

  manufacturer AircraftManufacturer @relation(fields: [manufacturer_id], references: [id])

  @@unique([manufacturer_id, name])
  @@map("aircraft_models")
}

model AtaCode {
  code       String   @id
  chapter    String
  section    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted    Boolean  @default(false)

  @@map("ata_codes")
}

model Attachment {
  id          String         @id @default(cuid())
  entity_id   String
  entity_type BusinessEntity
  filename    String
  file_url    String
  uploaded_by String
  uploaded_at DateTime       @default(now())
  created_at  DateTime       @default(now())
  updated_at  DateTime       @updatedAt

  @@unique([entity_id, entity_type, filename])
  @@map("attachments")
}

model BaseOfOperation {
  id          String   @id @default(cuid())
  customer_id String
  name        String
  street1     String
  street2     String?
  city        String
  state       String
  zip         String
  country     String
  notes       String?
  latitude    Float?
  longitude   Float?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  deleted     Boolean  @default(false)

  customer                 Customer                @relation(fields: [customer_id], references: [id])
  customer_to_product_map  CustomerToProductMap[]
  customer_to_supplier_map CustomerToSupplierMap[]
  inventory_location       InventoryLocation[]
  maintenance_requests     MaintenanceRequest[]
  physical_inventory_items PhysicalInventoryItem[]
  purchase_orders          PurchaseOrder[]
  work_orders              WorkOrder[]
  aircraft                 Aircraft[]

  @@map("base_of_operations")
}

model ChatMessage {
  id                  String   @id @default(cuid())
  reply_to_message_id String?
  from_user_id        String?
  to_user_id          String?
  session_id          String?
  message             String
  prompt_request      String?
  prompt_response     String?
  chat_topic          String?
  sentiment           Float?   @default(0)
  is_ai_generated     Boolean  @default(false)
  is_system_message   Boolean  @default(false)
  ai_model            String?
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt

  from_user User? @relation(name: "receivedMessages", fields: [from_user_id], references: [id])
  to_user   User? @relation(name: "sentMessages", fields: [to_user_id], references: [id])

  @@map("chat_messages")
}

model ComplianceRequirement {
  id                   String                    @id @default(cuid())
  aircraft_id          String?
  model                String?
  manufacturer         String?
  compliance_type      ComplianceRequirementType
  regulation_authority RegulationAuthority
  regulation_reference String
  name                 String
  description          String
  due_date             DateTime
  status               String
  notes                String?
  created_at           DateTime                  @default(now())
  updated_at           DateTime                  @updatedAt
  deleted              Boolean                   @default(false)

  aircraft Aircraft? @relation(fields: [aircraft_id], references: [id])

  @@map("compliance_requirements")
}

model Customer {
  id              String   @id @default(cuid())
  code            String   @unique
  name            String
  primary_email   String
  primary_phone   String
  primary_street1 String
  primary_street2 String?
  primary_city    String
  primary_state   String
  primary_zip     String
  primary_country String
  notes           String?
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  deleted         Boolean  @default(false)
  last_used_po_number Int @default(1)
  last_used_unscheduled_maintenance_number Int @default(1)
  last_used_wo_number Int @default(1)

  aircraft                 Aircraft[]
  base_of_operations       BaseOfOperation[]
  customer_to_aircraft_map CustomerToAircraftMap[]
  customer_to_product_map  CustomerToProductMap[]
  customer_to_supplier_map CustomerToSupplierMap[]
  inventory_location       InventoryLocation[]
  physical_inventory_items PhysicalInventoryItem[]
  purchase_orders          PurchaseOrder[]
  user_to_customer_map     UserToCustomerMap[]
  work_orders              WorkOrder[]

  @@map("customers")
}

model CustomerToAircraftMap {
  customer_id String
  aircraft_id String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  customer Customer @relation(fields: [customer_id], references: [id])
  aircraft Aircraft @relation(fields: [aircraft_id], references: [id])

  @@id([customer_id, aircraft_id])
  @@map("customer_to_aircraft_map")
}

model CustomerToProductMap {
  customer_id          String
  product_id           String
  base_of_operation_id String?
  created_at           DateTime @default(now())
  updated_at           DateTime @updatedAt

  base_of_operation BaseOfOperation? @relation(fields: [base_of_operation_id], references: [id])
  customer          Customer         @relation(fields: [customer_id], references: [id])
  product           Product          @relation(fields: [product_id], references: [id])

  @@id([customer_id, product_id])
  @@map("customer_to_product_map")
}

model CustomerToSupplierMap {
  customer_id          String
  supplier_id          String
  base_of_operation_id String?
  created_at           DateTime @default(now())
  updated_at           DateTime @updatedAt

  base_of_operation BaseOfOperation? @relation(fields: [base_of_operation_id], references: [id])
  customer          Customer         @relation(fields: [customer_id], references: [id])
  supplier          Supplier         @relation(fields: [supplier_id], references: [id])

  @@id([customer_id, supplier_id])
  @@map("customer_to_supplier_map")
}

model LogbookEntry {
  id                   String              @id @default(cuid())
  aircraft_id          String
  entry_date           DateTime
  entry_type           String
  entry_description    String
  regulation_authority RegulationAuthority
  regulation_reference String
  created_at           DateTime            @default(now())
  updated_at           DateTime            @updatedAt
  deleted              Boolean             @default(false)

  aircraft       Aircraft        @relation(fields: [aircraft_id], references: [id])
  work_performed WorkPerformed[]

  @@map("logbook_entries")
}

model MaintenanceRequest {
  id                   String                   @id @default(cuid())
  aircraft_id          String
  base_of_operation_id String?
  maintenance_type     MaintenanceRequestType
  description          String
  recorded_by          String
  recorded_at          DateTime                 @default(now())
  status               MaintenenceRequestStatus @default(OPEN)
  resolution_notes     String?
  resolved_by          String?
  resolved_at          DateTime?
  deleted              Boolean                  @default(false)

  aircraft          Aircraft         @relation(fields: [aircraft_id], references: [id])
  base_of_operation BaseOfOperation? @relation(fields: [base_of_operation_id], references: [id])

  @@map("maintenance_requests")
}

model PurchaseOrder {
  id                   String              @id @default(cuid())
  order_number         String              @unique
  customer_id          String
  supplier_id          String
  base_of_operation_id String?
  aircraft_id          String?
  status               PurchaseOrderStatus @default(PENDING)
  total_cost           Float?
  ordered_by           String
  approved_by          String?
  ordered_at           DateTime            @default(now())
  received_at          DateTime?
  notes                String?
  created_at           DateTime            @default(now())
  updated_at           DateTime            @updatedAt
  deleted              Boolean             @default(false)

  aircraft          Aircraft?           @relation(fields: [aircraft_id], references: [id])
  base_of_operation BaseOfOperation?    @relation(fields: [base_of_operation_id], references: [id])
  customer          Customer            @relation(fields: [customer_id], references: [id])
  line_items        PurchaseOrderItem[]
  supplier          Supplier            @relation(fields: [supplier_id], references: [id])

  @@map("purchase_orders")
}

model PurchaseOrderItem {
  id                String    @id @default(cuid())
  purchase_order_id String
  product_id        String
  quantity          Float
  unit_price        Float
  total_price       Float
  received_quantity Float?    @default(0)
  received_at       DateTime?
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt

  product        Product       @relation(fields: [product_id], references: [id])
  purchase_order PurchaseOrder @relation(fields: [purchase_order_id], references: [id])

  @@map("purchase_order_items")
}

model PhysicalInventoryItem {
  id                    String   @id @default(cuid())
  customer_id           String
  aircraft_id           String?
  base_of_operation_id  String?
  product_id            String 
  parent_id             String? 
  number                String   @unique
  name                  String?
  serial_number         String?
  lot_number            String?
  description           String?
  unit_cost             Float?
  inventory_location_id String?
  quantity              Float    @default(1)
  unit_of_measure       String?  @default("EA")
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt
  deleted               Boolean  @default(false)
  track_usage_with_parent       Boolean  @default(false)
  current_usage         Json? // calculated rollup from all the usage metrics by metric type for this physical inventory
  show_on_aircraft      Boolean  @default(true)

  aircraft           Aircraft?          @relation("InstalledPhysicalInventoryItems", fields: [aircraft_id], references: [id])
  base_of_operation  BaseOfOperation?   @relation(fields: [base_of_operation_id], references: [id])
  customer           Customer           @relation(fields: [customer_id], references: [id])
  product            Product            @relation(fields: [product_id], references: [id])
  inventory_location InventoryLocation? @relation(fields: [inventory_location_id], references: [id])
  scheduled_maintenance ScheduledMaintenance[]
  unscheduled_maintenance UnscheduledMaintenance[]
  components       PhysicalInventoryItem[] @relation("ComponentRelation")
  usage_metrics UsageMetric[]
  parent_inventory PhysicalInventoryItem? @relation("ComponentRelation", fields: [parent_id], references: [id])
  airframe_of_aircraft Aircraft? @relation("AirframePhysicalInventoryItem")
  maintenance_due_projections MaintenanceDueProjection[]

  @@map("physical_inventory_items")
}

model UsageMetric {
  id            String   @id @default(uuid())
  inventory_id  String   
  metric_type   MetricType
  value         Float
  recorded_at   DateTime @default(now())
  correction_id String?  
  is_corrected Boolean  @default(false) 

  physical_inventory_item PhysicalInventoryItem @relation(fields: [inventory_id], references: [id]) 
  correction UsageMetric? @relation("CorrectionRelation", fields: [correction_id], references: [id])
  corrections UsageMetric[] @relation("CorrectionRelation")
  penalties UsagePenalty[]

  @@map("usage_metrics")  
}

model UsagePenalty {
  id           String   @id @default(uuid())
  usage_metric_id String  
  event_type    PenaltyEventType
  penalty_factor Float  // Multiplier for extra maintenance impact
  penalty_hours  Float  // Additional hours applied due to penalty calculated by the usage metric times the penalty factor
  recorded_at   DateTime @default(now())

  usage_metric UsageMetric @relation(fields: [usage_metric_id], references: [id])

  @@map("usage_penalties")
}

model InventoryLocation {
  id                   String   @id @default(cuid())
  customer_id          String
  base_of_operation_id String?
  parent_id            String?
  code                 String   @unique
  name                 String   @unique
  description          String?
  created_at           DateTime @default(now())
  updated_at           DateTime @updatedAt
  deleted              Boolean  @default(false)

  physical_inventory_item PhysicalInventoryItem[]
  customer                Customer                @relation(fields: [customer_id], references: [id])
  base_of_operation       BaseOfOperation?        @relation(fields: [base_of_operation_id], references: [id])

  @@map("physical_inventory_locations")
}

model Product {
  id                String   @id @default(cuid())
  name              String
  description       String?
  part_number       String   @unique
  manufacturer      String?
  model             String?
  quantity_in_stock Float    @default(0)
  reorder_threshold Float?
  category          String?
  sub_category      String?
  unit_price        Float?
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  deleted           Boolean  @default(false)

  customer_to_product_map CustomerToProductMap[]
  inventory_items         PhysicalInventoryItem[]
  purchase_order_items    PurchaseOrderItem[]
  supplier_to_product_map SupplierToProductMap[]

  @@map("products")
}

model ScheduledMaintenance {
  id                       String                     @id @default(cuid())
  physical_inventory_id    String
  aircraft_id              String
  name                     String
  description              String?
  standard_operating_procedure  String?
  ata_code                 String?
  task_number              String?
  status                   ScheduledMaintenanceStatus @default(ACTIVE)
  priority                 Int?
  regulation_authority     RegulationAuthority?
  regulation_reference     String?
  estimated_downtime_hours Float?
  estimated_cost           Float?
  actual_cost              Float?
  maintenance_type         String?
  notes                    String?
  created_at               DateTime                   @default(now())
  updated_at               DateTime                   @updatedAt
  deleted                  Boolean                    @default(false)

  aircraft                 Aircraft                   @relation(fields: [aircraft_id], references: [id])
  checklist_items          ScheduledMaintenanceChecklistItem[]
  due_projections          MaintenanceDueProjection[]
  intervals                ScheduledMaintenanceInterval[]
  physical_inventory       PhysicalInventoryItem      @relation(fields: [physical_inventory_id], references: [id])
  work_order_line_items    WorkOrderLineItem[]
  work_performed           WorkPerformed[]

  @@map("scheduled_maintenance")
}

model ScheduledMaintenanceChecklistItem {
  id                       String   @id @default(cuid())
  scheduled_maintenance_id String
  number                   Int      @default(1)
  description              String?
  created_at               DateTime                   @default(now())
  updated_at               DateTime                   @updatedAt
  deleted                  Boolean                    @default(false)

  scheduled_maintenance ScheduledMaintenance @relation(fields: [scheduled_maintenance_id], references: [id])

  @@map("scheduled_maintenance_checklist_items")
  WorkPerformedChecklistItem WorkPerformedChecklistItem[]
}

model ScheduledMaintenanceInterval {
  id                 String   @id @default(uuid())
  scheduled_maintenance_id  String
  interval_type       IntervalType
  metric_type         MetricType 
  interval_value      Float
  tolerance_value     Float?
  adjusted_interval_value Float? // this gets the aircraft back on schedule. Only allowed for part 91 and some part 135 operators
  last_performed_value Float?
  last_performed_date  DateTime?
  
  // Recurrence pattern information
  recurrence_pattern       RecurrencePattern @default(NONE)
  recurrence_days          Int[]    @default([]) // Days of week (1-7) for WEEKLY, days of month (1-31) for MONTHLY
  recurrence_months        Int[]    @default([]) // Months (1-12) for YEARLY
  recurrence_interval      Int?     // For CUSTOM: number of days between occurrences

  scheduled_maintenance ScheduledMaintenance @relation(fields: [scheduled_maintenance_id], references: [id])

  @@map("scheduled_maintenance_intervals")
}

// Projection model for maintenance due calculations
model MaintenanceDueProjection {
  id                         String   @id @default(cuid())
  scheduled_maintenance_id   String?
  unscheduled_maintenance_id String?
  physical_inventory_id    String
  aircraft_id              String
  tail_number              String?
  name                     String
  description              String?
  ata_code                 String?
  task_number              String?
  status                   ScheduledMaintenanceStatus
  priority                 Int?
  maintenance_type         String?
  
  // Calculated overall due status
  next_due_date            DateTime?
  days_remaining           Int?
  is_overdue               Boolean
  due_reason               String? // Which metric is causing the item to be due
 
  // Relations
  scheduled_maintenance    ScheduledMaintenance? @relation(fields: [scheduled_maintenance_id], references: [id])
  unscheduled_maintenance  UnscheduledMaintenance? @relation(fields: [unscheduled_maintenance_id], references: [id])
  physical_inventory       PhysicalInventoryItem @relation(fields: [physical_inventory_id], references: [id])
  aircraft                 Aircraft @relation(fields: [aircraft_id], references: [id])
  due_metrics              MaintenanceDueMetric[]
  
  @@map("maintenance_due_projections")
}

// Model for individual due metrics within a maintenance due projection
model MaintenanceDueMetric {
  id                      String   @id @default(cuid())
  maintenance_due_projection_id String
  
  // Due information
  interval_type            IntervalType
  metric_type              MetricType
  interval_value           Float
  tolerance_value          Float?
  last_performed_value     Float?
  last_performed_date      DateTime?
  
  // Calculated due values
  next_due_value           Float?
  next_due_date            DateTime?
  remaining_value          Float?
  days_remaining           Int?
  is_overdue               Boolean
  

  // Relations
  maintenance_due_projection MaintenanceDueProjection @relation(fields: [maintenance_due_projection_id], references: [id])
  
  @@map("maintenance_due_metrics")
}

model Supplier {
  id                String          @id @default(cuid())
  name              String
  contact_person    String?
  primary_phone     String?
  primary_email     String?
  services_provided String?
  is_mro            Boolean         @default(false)
  rating            FiveStarRating?
  notes             String?
  created_at        DateTime        @default(now())
  updated_at        DateTime        @updatedAt
  deleted           Boolean         @default(false)

  customer_to_supplier_map CustomerToSupplierMap[]
  purchase_orders          PurchaseOrder[]
  supplier_to_product_map  SupplierToProductMap[]

  @@map("suppliers")
}

model SupplierToProductMap {
  supplier_id String
  product_id  String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  supplier Supplier @relation(fields: [supplier_id], references: [id])
  product  Product  @relation(fields: [product_id], references: [id])

  @@id([supplier_id, product_id])
  @@map("supplier_to_product_map")
}

model User {
  id         String   @id @default(cuid())
  email      String   @unique
  first_name String
  last_name  String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  deleted    Boolean  @default(false)

  user_to_customer_map   UserToCustomerMap[]
  sent_chat_messages     ChatMessage[]       @relation(name: "sentMessages")
  received_chat_messages ChatMessage[]       @relation(name: "receivedMessages")

  @@map("users")
}

model UserToCustomerMap {
  user_id     String
  customer_id String
  role        UserRole
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  user     User     @relation(fields: [user_id], references: [id])
  customer Customer @relation(fields: [customer_id], references: [id])

  @@id([user_id, customer_id])
  @@map("user_to_customer_map")
}

model WorkOrder {
  id                   String             @id @default(cuid())
  aircraft_id          String?
  customer_id          String?
  base_of_operation_id String?
  work_order_number    String             @unique
  description          String
  assigned_to          String?
  status               WorkOrderStatus    @default(OPEN)
  priority             WorkOrderPriority?
  created_at           DateTime           @default(now())
  due_date             DateTime?
  completed_at         DateTime?
  updated_at           DateTime           @updatedAt
  deleted              Boolean            @default(false)

  aircraft          Aircraft?        @relation(fields: [aircraft_id], references: [id])
  base_of_operation BaseOfOperation? @relation(fields: [base_of_operation_id], references: [id])
  customer          Customer?        @relation(fields: [customer_id], references: [id])
  line_items        WorkOrderLineItem[]

  @@map("work_orders")
}

model WorkOrderLineItem {
  id                  String   @id @default(cuid())
  work_order_id       String
  scheduled_maintenance_id   String?
  unscheduled_maintenance_id String?
  description         String?
  estimated_hours     Float @default(0)
  actual_hours        Float @default(0)
  labor_cost          Float @default(0)
  parts_cost          Float @default(0)
  total_cost          Float @default(0)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  completed_at        DateTime?

  work_order WorkOrder  @relation(fields: [work_order_id], references: [id])
  scheduled_maintenance ScheduledMaintenance? @relation(fields: [scheduled_maintenance_id], references: [id])
  unscheduled_maintenance UnscheduledMaintenance? @relation(fields: [unscheduled_maintenance_id], references: [id])

  @@map("work_order_line_items")
}

model WorkPerformed {
  id                         String               @id @default(cuid())
  aircraft_id                String
  scheduled_maintenance_id   String?
  unscheduled_maintenance_id String?
  work_description           String
  performed_at               DateTime             @default(now())
  performed_by               String
  flight_hours_at_service    Float
  engine_cycles_at_service   Int
  landing_at_service         Int
  status                     WorkPerformedStatus  @default(COMPLETE)
  verified_by                String?
  verified_at                DateTime?
  labor_hours                Float?
  parts_used                 Json?
  total_cost                 Float?
  regulation_authority       RegulationAuthority?
  regulation_reference       String?
  log_entry_reference        String?
  work_category              String?
  repeat_inspection_due      DateTime?
  notes                      String?
  created_at                 DateTime             @default(now())
  updated_at                 DateTime             @updatedAt
  deleted                    Boolean              @default(false)

  aircraft                Aircraft                @relation(fields: [aircraft_id], references: [id])
  logbook_entry           LogbookEntry?           @relation(fields: [log_entry_reference], references: [id])
  scheduled_maintenance   ScheduledMaintenance?   @relation(fields: [scheduled_maintenance_id], references: [id])
  unscheduled_maintenance UnscheduledMaintenance? @relation(fields: [unscheduled_maintenance_id], references: [id])

  @@map("work_performed")
  WorkPerformedChecklistItem WorkPerformedChecklistItem[]
}

model WorkPerformedChecklistItem {
  id                String   @id @default(cuid())
  work_performed_id String
  scheduled_maintenance_checklist_item_id String
  is_completed     Boolean  @default(false)
  notes           String?
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  deleted           Boolean  @default(false)
  completed_at       DateTime?
  completed_by       String?

  work_performed WorkPerformed @relation(fields: [work_performed_id], references: [id])
  scheduled_maintenance_checklist_item ScheduledMaintenanceChecklistItem @relation(fields: [scheduled_maintenance_checklist_item_id], references: [id])

  @@map("work_performed_checklist_items")
}

model UnscheduledMaintenance {
  id                String                           @id @default(cuid())
  code              String                           @unique                          
  physical_inventory_id String?
  aircraft_id       String?
  reported_by       String
  reported_date     DateTime                         @default(now())
  reported_location String?
  title             String
  description       String
  ata_code          String?
  severity          SeverityEnum
  safety_impact     Boolean                          @default(false)
  repeat_issue      Boolean                          @default(false)
  flight_phase      FlightPhaseEnum
  aircraft_time     Float?
  engine_cycles     Int?
  landings          Int?
  status            UnscheduledMaintenanceStatusEnum @default(OPEN)
  assigned_to       String?
  deferred_until    DateTime?
  corrective_action String?
  resolved_by       String?
  resolved_date     DateTime?
  parts_used        Json?
  mel_cdl_deferral_id String?
  created_at        DateTime                         @default(now())
  updated_at        DateTime                         @updatedAt
  deleted           Boolean                          @default(false)

  physical_inventory       PhysicalInventoryItem?        @relation(fields: [physical_inventory_id], references: [id])
  mel_cdl_deferral         MelCdlDeferral[]          
  work_performed           WorkPerformed[]
  aircraft                 Aircraft?                   @relation(fields: [aircraft_id], references: [id])
  due_projections          MaintenanceDueProjection[]
  work_order_line_items    WorkOrderLineItem[]

  @@map("unscheduled_maintenance")
  
}

model MelCdlDeferral {
  id                            String               @id @default(cuid())
  aircraft_id                   String
  unscheduled_maintenance_id    String?              @unique
  mel_reference_number          String?
  mel_category                  MELCategoryEnum?
  cdl_reference_number          String?
  deferral_reason               String?
  deferral_status               DeferralStatusEnum   @default(ACTIVE)
  deferral_approved_by          String?
  deferral_approval_date        DateTime?
  mel_expiration_date           DateTime?
  cdl_expiration_date           DateTime?
  operational_limitations       String?
  alternate_procedures_required Boolean              @default(false)
  required_pilot_briefing       Boolean              @default(false)
  compliance_status             ComplianceStatusEnum @default(PENDING)
  compliance_verified_by        String?
  compliance_verified_date      DateTime?
  created_at                    DateTime             @default(now())
  updated_at                    DateTime             @updatedAt

  aircraft                Aircraft                @relation(fields: [aircraft_id], references: [id])
  unscheduled_maintenance UnscheduledMaintenance? @relation(fields: [unscheduled_maintenance_id], references: [id])

  @@map("mel_cdl_deferrals")
}

enum AircraftStatusEnum {
  AIRWORTHY
  UNDER_MAINTENANCE
  MAINTENANCE_DUE_SOON
  GROUNDED
}

enum BusinessEntity {
  AIRCRAFT
  COMPLIANCEREQUIREMENT
  CUSTOMER
  LOGBOOKENTRY
  MAINTENANCEREQUEST
  PRODUCT
  PHYSICALINVENTORYITEM
  PURCHASEORDER
  PURCHASEORDERLINEITEM
  SCHEDULEDMAINTENANCE
  UNSCHEDULEDMAINTENANCE
  SUPPLIER
  USER
  WORKORDER
  WORKPERFORMED
}

enum ComplianceRequirementType {
  AD
  SB
  INSPECTION
  CERTIFICATION
}

enum FiveStarRating {
  ONE
  TWO
  THREE
  FOUR
  FIVE
}

enum LeasingEnum {
  OWNED
  LEASED
  UNDER_FINANCING
}

enum MaintenanceRequestType {
  INSPECTION
  REPAIR
  OVERHAUL
  MODIFICATION
  UPGRADE
  REPLACEMENT
  ADJUSTMENT
  TROUBLESHOOTING
  OTHER
}

enum MaintenenceRequestStatus {
  OPEN
  IN_PROGRESS
  RESOLVED
  REJECTED
}

enum PurchaseOrderStatus {
  PENDING
  APPROVED
  ORDERED
  RECEIVED
  COMPLETED
}

enum RegulationAuthority {
  FAA
  EASA
  CAA
  TCAC
  CASA
  DGCA
}

enum ScheduledMaintenanceStatus {
  ACTIVE
  INACTIVE
  DUESOON
  OVERDUE
}

enum UserRole {
  ADMIN
  BILLING
  INSPECTOR
  MAINTENANCE
  READONLY
}

enum WorkOrderPriority {
  CRITICAL
  HIGH
  MEDIUM
  LOW
}

enum WorkOrderStatus {
  OPEN
  IN_PROGRESS
  COMPLETED
  REJECTED
}

enum WorkPerformedStatus {
  COMPLETE
  INCOMPLETE
  VERIFIED
  REJECTED
  BLOCKED
}

enum UnscheduledMaintenanceStatusEnum {
  OPEN
  IN_PROGRESS
  DEFERRED
  CLOSED
  NON_COMPLIANT
}

enum MELCategoryEnum {
  A
  B
  C
  D
  NEF
}

enum DeferralStatusEnum {
  ACTIVE
  EXPIRED
}

enum ComplianceStatusEnum {
  PENDING
  COMPLIANT
  NON_COMPLIANT
}

enum SeverityEnum {
  LOW
  MODERATE
  HIGH
  GROUNDED
}

enum FlightPhaseEnum {
  PREFLIGHT
  TAXI
  TAKEOFF
  CRUISE
  LANDING
}

enum IntervalType {
  TimeBased
  UsageBased
}

enum MetricType {
  FLIGHT_HOURS
  CYCLES
  LANDINGS
  MILES
  DAYS
  MONTHS
  RIN
}

enum RecurrencePattern {
  NONE        // Not recurring
  DAILY       // Every day
  WEEKLY      // Every week on specified days
  MONTHLY     // Every month on specified days
  QUARTERLY   // Every 3 months
  YEARLY      // Every year on specified month
  CUSTOM      // Custom interval in days
}

enum PenaltyEventType {
  OVER_TORQUE
  ROTOR_OVERSPEED
  ENGINE_OVERTEMP
  HIGH_G_LOAD
  EXTENDED_HOVER
  LOW_ROTOR_RPM
}